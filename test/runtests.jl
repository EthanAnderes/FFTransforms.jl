using FFTransforms
using Test
FF = FFTransforms

@testset "Basic" begin

	let 
		T_forward_arg  = (Float32, Float64, Complex{Float32}, Complex{Float64})
		sz_forward_arg = ((8,7), (5,), (7,8,16), (14,4))
		region         = ((false,true), (true,), (false,true,false), (true,false))
		scale_forward =  (1, true, 1.0, 0.1f0)

		for indx = 1:length(T_forward_arg)
			Tf  = T_forward_arg[indx]
			szf = sz_forward_arg[indx]
			reg = region[indx]
			scf = scale_forward[indx]
			FT = plan(
				Tf, 
				FF.SizeInt{szf}, 
				FF.RegionBool{reg}, 
				scf
			)
			X = rand(Tf, szf)
			Y = FT.scale_forward .* (FT.unscaled_forward_transform * X)
			X‚Ä≤ = FT.scale_inverse .* (FT.unscaled_inverse_transform * Y)
			@test sum(abs2, X .- X‚Ä≤) / sum(szf) ‚âà 0 atol=1e-7
		end
	end



	let 
		n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ = 12, 10, 256, 2
		
		W1 = ùïÄ(n‚ÇÅ)
		W2 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ)
		W3 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ)
		W4 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ) ‚äó ùïé(n‚ÇÑ)
		W5 = ùïÄ(n‚ÇÅ, n‚ÇÇ)   ‚äó ùïé(n‚ÇÉ)
		W6 = rùïé(n‚ÇÅ,n‚ÇÇ)  ‚äó ùïÄ(n‚ÇÉ,n‚ÇÑ)
		# W7 = rùïé(n‚ÇÅ,n‚ÇÇ)' ‚äó ùïÄ(n‚ÇÉ,n‚ÇÑ)

		FT1 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ) ‚äó ùïé(n‚ÇÑ) * true
		FT2 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ) ‚äó ùïé(n‚ÇÑ) * 10.0
		FT3 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ) ‚äó ùïé(n‚ÇÑ) * 2
		#FT4 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ) ‚äó ùïé(n‚ÇÑ) |> unitary_plan
		#FT5 = ùïÄ(n‚ÇÅ) ‚äó rùïé(n‚ÇÇ) ‚äó ùïÄ(n‚ÇÉ) ‚äó ùïé(n‚ÇÑ) |> plan

		X = rand(Float64, n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ)
		FT1 \ (FT1 * X)
		FT2 \ (FT2 * X)
		FT3 \ (FT3 * X)
	end


	let 
		n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ = 12, 10, 256, 5
		p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ = 1.0, 2œÄ, 10.0, 2.0
		r‚ÇÅ, r‚ÇÇ, r‚ÇÉ, r‚ÇÑ = false, true, false, true
		pix(n‚ÇÅ, p‚ÇÅ)
		pix((n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ), (p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ))
		freq(n‚ÇÅ, p‚ÇÅ)
		freq((n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ), (p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ))
		freq((n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ), (p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ), (r‚ÇÅ, r‚ÇÇ, r‚ÇÉ, r‚ÇÑ))
		rfreq((n‚ÇÅ, n‚ÇÇ, n‚ÇÉ, n‚ÇÑ), (p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ), (r‚ÇÅ, r‚ÇÇ, r‚ÇÉ, r‚ÇÑ))
	end


	# perhaps fields are xmap{W,scale}

end
